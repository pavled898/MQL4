{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //+------------------------------------------------------------------+\
//|                                           barLevelEventsTest.mq4 |\
//|                        Copyright 2021, MetaQuotes Software Corp. |\
//|                                             https://www.mql5.com |\
//+------------------------------------------------------------------+\
#property copyright "Copyright 2021, MetaQuotes Software Corp."\
#property link      "https://www.mql5.com"\
#property version   "1.00"\
#property strict\
#include <CustomFunctions.mqh>\
#include <abstractedIndicators.mqh>\
\
//+------------------------------------------------------------------+\
//| Expert initialization function                                   |\
//+------------------------------------------------------------------+\
datetime lastActionTime = 0;\
int openOrderID;\
double lotSize;\
double riskPerTrade = 0.02;\
int magicNB = 55555;\
int OnInit()\
  \{\
//---\
   \
//---\
   return(INIT_SUCCEEDED);\
  \}\
//+------------------------------------------------------------------+\
//| Expert deinitialization function                                 |\
//+------------------------------------------------------------------+\
void OnDeinit(const int reason)\
  \{\
//---\
   \
  \}\
//+------------------------------------------------------------------+\
//| Expert tick function                                             |\
//+------------------------------------------------------------------+\
void OnTick()\
  \{\
  \
  \
//---\
     if(lastActionTime != Time[0])\
     \{\
         bool exitBuy = !isLastHeikenAshiBull();\
         bool exitSell = !exitBuy;\
         \
         double baseline = iMA(NULL, PERIOD_CURRENT, 20, 0, MODE_SMA, PRICE_CLOSE, 0);\
         \
         double atr = iATR(NULL, PERIOD_CURRENT, 14, 0);\
         if(CheckIfOpenOrdersByMagicNB(magicNB)) \{                                                                         //POSITION OPENED\
            if(OrderSelect(openOrderID,SELECT_BY_TICKET)==true) \
            \{\
               int orderType = OrderType(); // 0 - LONG, 1 - SHORT\
               if(orderType == 0)\
                 \{\
                     if(Open[1] > baseline && Close[1] < baseline) \
                     \{\
                        OrderClose(openOrderID, lotSize, Bid, 10);\
                     \};\
                     if(exitBuy) \
                     \{\
                        OrderClose(openOrderID, lotSize, Bid, 10);\
                     \};   \
                 \}\
               else\
                 \{\
                     if(Open[1] < baseline && Close[1] > baseline) \
                     \{\
                        OrderClose(openOrderID, lotSize, Ask, 10);\
                     \};\
                     if(exitSell) \
                     \{\
                        OrderClose(openOrderID, lotSize, Ask, 10);\
                     \};  \
                 \}\
            \};\
         \};\
         if(!CheckIfOpenOrdersByMagicNB(magicNB)) \{                                        //NO OPEN POSITION\
            if(Open[1] < baseline && Close[1] > baseline ) \{                                 //go LONG\
               lotSize = OptimalLotSize(riskPerTrade,Ask,Ask - atr*1.5);\
               double stopLoss = NormalizeDouble(Ask - atr*1.5, Digits);\
               Print("ATR ", +atr);\
               Print("StopLoss " + stopLoss);\
               Print("Ask " + Ask);\
               Print("baseline: " + baseline);\
               Print("STOPLEVEL ", +MarketInfo(Symbol(),MODE_STOPLEVEL));\
               openOrderID = OrderSend(NULL,OP_BUY,lotSize,Ask,10,stopLoss, 0,NULL,magicNB);\
            \} \
            else if (Open[1] > baseline && Close[1] < baseline)                              //GO SHORT\
            \{\
               lotSize = OptimalLotSize(riskPerTrade,Bid,Bid + atr*1.5);\
               double stopLoss = NormalizeDouble(Bid + atr*1.5, Digits);\
               Print("ATR ", +atr);\
               Print("StopLoss " + stopLoss);\
               Print("Bid " + Bid);\
               Print("baseline: " + baseline);\
               Print("STOPLEVEL ", +MarketInfo(Symbol(),MODE_STOPLEVEL));\
               openOrderID = OrderSend(NULL,OP_SELL,lotSize,Bid,10,stopLoss, 0,NULL,magicNB);\
            \} \
         \} \
         lastActionTime = Time[0];\
     \}\
  \}\
//+------------------------------------------------------------------+\
}